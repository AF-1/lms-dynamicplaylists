-- PlaylistName:Genres - not rated
-- PlaylistGroups:Genres
-- PlaylistCategory:genres
-- PlaylistParameter1:list:Limit to genres that contain recently PLAYED songs?:0:all genres,1:genres with recently played songs
-- PlaylistParameter2:list:Limit to genres with recently ADDED songs?:0:all genres,1:genres with recently added songs
create temporary table dynamicplaylist_random_genres as 
	select notrated.genre as genre, notrated.sumrating as sumrating from
		(select genre_track.genre as genre, sum(ifnull(tracks_persistent.rating,0)) as sumrating from genre_track
			join tracks on
				genre_track.track=tracks.id
			join library_track on
				library_track.track = tracks.id
			left join tracks_persistent on
				tracks_persistent.urlmd5 = tracks.urlmd5
			left join dynamicplaylist_history on
				dynamicplaylist_history.id=tracks.id and dynamicplaylist_history.client='PlaylistPlayer' and dynamicplaylist_history.id is null
			where
				genre_track.genre is not null
				and not exists (select * from tracks t2,genre_track,genres
								where
									t2.id=tracks.id and
									tracks.id=genre_track.track and 
									genre_track.genre=genres.id and
									genres.name in ('PlaylistExcludedGenres'))
				and
					case
						when 'PlaylistParameter1'=1 then ((strftime('%s',DATE('NOW','-'PlaylistPeriodRecentlyPlayed' DAY'))-tracks_persistent.lastPlayed) < 0)
						else 1
					end
				and
					case
						when 'PlaylistParameter2'=1 then ((strftime('%s',DATE('NOW','-'PlaylistPeriodRecentlyAdded' DAY'))-tracks_persistent.added) < 0)
						else 1
					end
				and
					case
						when ('PlaylistCurrentVirtualLibraryForClient'!='' and 'PlaylistCurrentVirtualLibraryForClient' is not null)
						then library_track.library = 'PlaylistCurrentVirtualLibraryForClient'
						else 1
					end
			group by genre_track.genre
				having sumrating = 0
			order by sumrating asc, random()
			limit 30) as notrated
	where sumrating = 0
	order by random()
	limit 1;
select distinct tracks.url from tracks
	join genre_track on
		genre_track.track=tracks.id
	join dynamicplaylist_random_genres on
		dynamicplaylist_random_genres.genre=genre_track.genre
	join library_track on
		library_track.track = tracks.id
	left join dynamicplaylist_history on
		dynamicplaylist_history.id=tracks.id and dynamicplaylist_history.client='PlaylistPlayer' and dynamicplaylist_history.id is null
	where
		audio=1
		and tracks.secs >= 'PlaylistTrackMinDuration'
		and
			case
				when ('PlaylistCurrentVirtualLibraryForClient' != '' and 'PlaylistCurrentVirtualLibraryForClient' is not null)
				then library_track.library = 'PlaylistCurrentVirtualLibraryForClient'
				else 1
			end
	group by tracks.id
	order by random()
	limit 'PlaylistLimit';
drop table dynamicplaylist_random_genres;
