-- PlaylistName:Albums - random   (from selected playlist)
-- PlaylistGroups:Context menu lists/ playlist
-- PlaylistMenuListType:contextmenu
-- PlaylistCategory:playlists
-- PlaylistContentType:album
-- PlaylistParameter1:playlist:Select playlist:
create temporary table dynamicplaylist_random_albums as
	select distinct tracks.album as album, count(distinct tracks.id) as totaltrackcount from playlist_track
		join tracks on
			tracks.url = playlist_track.track
		left join library_track on
			library_track.track = tracks.id
		left join dynamicplaylist_history on
			dynamicplaylist_history.id=tracks.id and dynamicplaylist_history.client='PlaylistPlayer'
		where
 			playlist_track.playlist='PlaylistParameter1'
 			and tracks.audio = 1
			and dynamicplaylist_history.id is null
			and
				case
					when ('PlaylistCurrentVirtualLibraryForClient'!='' and 'PlaylistCurrentVirtualLibraryForClient' is not null)
					then library_track.library = 'PlaylistCurrentVirtualLibraryForClient'
					else 1
				end
			and not exists (select * from tracks t2,genre_track,genres
							where
								t2.id=tracks.id and
								tracks.id=genre_track.track and
								genre_track.genre=genres.id and
								genres.name in ('PlaylistExcludedGenres'))
		group by tracks.album
			having totaltrackcount > 'PlaylistMinAlbumTracks'
		order by random()
		limit 1;
select distinct playlist_track.track from playlist_track
	join tracks on
		tracks.url = playlist_track.track
	join dynamicplaylist_random_albums
		on tracks.album=dynamicplaylist_random_albums.album
	left join library_track on
		library_track.track = tracks.id
	left join dynamicplaylist_history on
		dynamicplaylist_history.id=tracks.id and dynamicplaylist_history.client='PlaylistPlayer'
	where
		playlist_track.playlist='PlaylistParameter1'
		and tracks.audio=1
		and tracks.secs >= 'PlaylistTrackMinDuration'
		and dynamicplaylist_history.id is null
		and
			case
				when ('PlaylistCurrentVirtualLibraryForClient'!='' and 'PlaylistCurrentVirtualLibraryForClient' is not null)
				then library_track.library = 'PlaylistCurrentVirtualLibraryForClient'
				else 1
			end
		and not exists (select * from tracks t2,genre_track,genres
						where
							t2.id=tracks.id and
							tracks.id=genre_track.track and
							genre_track.genre=genres.id and
							genres.name in ('PlaylistExcludedGenres'))
	group by playlist_track.track
	order by
		case
			when 'PlaylistCompleteAlbums' = 1 then "dynamicplaylist_random_albums.album, tracks.disc, tracks.tracknum"
		else
			"dynamicplaylist_random_albums.album, random()"
		end
	limit
		case
			when 'PlaylistCompleteAlbums' = 1 then -1
		else
			'PlaylistLimit'
		end
		;
drop table dynamicplaylist_random_albums;
