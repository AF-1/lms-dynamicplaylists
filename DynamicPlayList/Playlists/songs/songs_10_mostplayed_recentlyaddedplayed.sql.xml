-- PlaylistName:Songs - most played
-- PlaylistGroups:Songs
-- PlaylistCategory:songs
-- PlaylistParameter1:list:Limit to recently PLAYED songs?:0:all songs,1:recently played songs,2:not with recently played songs
-- PlaylistParameter2:list:Limit to recently ADDED songs?:0:all songs,1:recently added songs,2:not with recently added songs
select mostplayed.url from
	(select distinct tracks.url from tracks
		join library_track on
			library_track.track = tracks.id
		join tracks_persistent on
			tracks_persistent.urlmd5 = tracks.urlmd5
		left join dynamicplaylist_history on
			dynamicplaylist_history.id=tracks.id and dynamicplaylist_history.client='PlaylistPlayer'
		where
			audio=1
			and dynamicplaylist_history.id is null
			and tracks.secs >= 'PlaylistTrackMinDuration'
			and not exists (select * from tracks t2,genre_track,genres
							where
								t2.id=tracks.id and
								tracks.id=genre_track.track and 
								genre_track.genre=genres.id and
								genres.name in ('PlaylistExcludedGenres'))
			and
				case
					when ('PlaylistCurrentVirtualLibraryForClient'!='' and 'PlaylistCurrentVirtualLibraryForClient' is not null)
					then library_track.library = 'PlaylistCurrentVirtualLibraryForClient'
					else 1
				end
			and
				case
					when 'PlaylistParameter1'=1 then ((strftime('%s',DATE('NOW','-'PlaylistPeriodRecentlyPlayed' DAY'))-tracks_persistent.lastPlayed) < 0)
					when 'PlaylistParameter1'=2 then ((strftime('%s',DATE('NOW','-'PlaylistPeriodRecentlyPlayed' DAY'))-tracks_persistent.lastPlayed) > 0)
					else 1
				end
			and
				case
					when 'PlaylistParameter2'=1 then ((strftime('%s',DATE('NOW','-'PlaylistPeriodRecentlyAdded' DAY'))-tracks_persistent.added) < 0)
					when 'PlaylistParameter2'=2 then ((strftime('%s',DATE('NOW','-'PlaylistPeriodRecentlyAdded' DAY'))-tracks_persistent.added) > 0)
					else 1
				end
		group by tracks.id
		order by tracks_persistent.playCount desc, random()
		limit 'PlaylistLimit') as mostplayed
	order by random();
