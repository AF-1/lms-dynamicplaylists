-- PlaylistName:Artists - not rated
-- PlaylistGroups:Artists
-- PlaylistCategory:artists
-- PlaylistParameter1:list:Limit to artists with recently PLAYED songs?:0:all artists,1:artists with recently played songs
-- PlaylistParameter2:list:Limit to artists with recently ADDED songs?:0:all artists,1:artists with recently added songs
create temporary table dynamicplaylist_random_contributors as 
	select notrated.contributor as contributor, notrated.sumrating as sumrating from
		(select contributor_track.contributor as contributor, sum(ifnull(tracks_persistent.rating,0)) as sumrating, count(distinct tracks.id) as totaltrackcount from tracks
			join contributor_track on
				contributor_track.track=tracks.id and contributor_track.role in (1,6)
			left join library_track on
				library_track.track = tracks.id
			left join tracks_persistent on
				tracks_persistent.urlmd5 = tracks.urlmd5
			left join dynamicplaylist_history on
				dynamicplaylist_history.id=tracks.id and dynamicplaylist_history.client='PlaylistPlayer'
			where
				audio=1
				and dynamicplaylist_history.id is null
				and
					case
						when 'PlaylistParameter1'=1 then ((strftime('%s',DATE('NOW','-'PlaylistPeriodRecentlyAdded' DAY'))-tracks_persistent.added) < 0)
						else 1
					end
				and
					case
						when 'PlaylistParameter2'=1 then ((strftime('%s',DATE('NOW','-'PlaylistPeriodRecentlyPlayed' DAY'))-tracks_persistent.lastPlayed) < 0)
						else 1
					end
				and
					case
						when ('PlaylistCurrentVirtualLibraryForClient'!='' and 'PlaylistCurrentVirtualLibraryForClient' is not null)
						then library_track.library = 'PlaylistCurrentVirtualLibraryForClient'
						else 1
					end
				and not exists (select * from tracks t2, genre_track, genres
								where
									t2.id = tracks.id and
									tracks.id = genre_track.track and 
									genre_track.genre = genres.id and
									genres.name in ('PlaylistExcludedGenres'))
			group by contributor_track.contributor
				having totaltrackcount > 3 and sumrating = 0
			order by sumrating asc, random()
			limit 30) as notrated
	where sumrating = 0
	order by random()
	limit 1;
select distinct tracks.url from tracks
	join contributor_track on
		contributor_track.track=tracks.id and contributor_track.role in (1,6)
	left join dynamicplaylist_random_contributors on
		dynamicplaylist_random_contributors.contributor=contributor_track.contributor
	join library_track on
		library_track.track = tracks.id
	left join dynamicplaylist_history on
		dynamicplaylist_history.id=tracks.id and dynamicplaylist_history.client='PlaylistPlayer'
	where
		audio=1
		and dynamicplaylist_history.id is null
		and tracks.secs >= 'PlaylistTrackMinDuration'
		and
			case
				when ('PlaylistCurrentVirtualLibraryForClient' != '' and 'PlaylistCurrentVirtualLibraryForClient' is not null)
				then library_track.library = 'PlaylistCurrentVirtualLibraryForClient'
				else 1
			end
		and not exists (select * from tracks t2, genre_track, genres
						where
							t2.id = tracks.id and
							tracks.id = genre_track.track and 
							genre_track.genre = genres.id and
							genres.name in ('PlaylistExcludedGenres'))
	order by dynamicplaylist_random_contributors.contributor,random()
	limit 'PlaylistLimit';
drop table dynamicplaylist_random_contributors;
